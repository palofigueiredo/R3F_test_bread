/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\src\assets\WawaOffice.glb 
*/

import React, { useLayoutEffect, useRef } from 'react'
import { Html, useGLTF, useScroll } from '@react-three/drei'
import gsap from 'gsap';
import { useFrame } from '@react-three/fiber';


export const INIT_X_POS = 0;
export const INIT_Y_POS = 0;
export const INIT_Z_POS = 0;
export const FLOOR_HEIGHT = 6;
export const NB_FLOORS = 4;


export function Models(props) {

const { nodes, materials } = useGLTF('./src/public/assets/bread_pack.glb')
const ref = useRef(); // useRef é um React Hook que mantém um valor que nao é utilizado no render e permite referenciá-lo  
const tl = useRef(); // tl é uma referência que será utilizada adiante para representar a 'linha do tempo' das animações, a qual estará ligada ao scroll da página
const pao1 = useRef();
const pao2 = useRef();
const pao3 = useRef();
const pao4 = useRef();


const scroll = useScroll();

useFrame( () => {
  tl.current.seek(scroll.offset * tl.current.duration()); 
});

useLayoutEffect( () => {

  tl.current = gsap.timeline(); // criamos um parâmetro em tl que é do tipo gsap.timeline(), que é utilizada para controlar as animações
  // // https://gsap.com/docs/v3/GSAP/gsap.timeline()/

  //VERTICAL ANIMATION
  tl.current.to(
      ref.current.position,
      {
          duration:1, 
          y: -FLOOR_HEIGHT, 
          x: -1,
      },
      0
  );
  // tl.current.to(
  //     ref.current.rotation,
  //     {
  //         duration:1, 
  //         y: -Math.PI/12, 
  //     },
  //     0
  // );
  // tl.current.to(
  //     pao2.current.rotation,
  //     {
  //         duration:1, 
  //         z: Math.PI/6, 
  //     },
  //     0
  // );


  tl.current.to(
      ref.current.position,
      {
          duration:1, 
          y: -FLOOR_HEIGHT* 2, 
          x: 0,
      },
      1
  );
  // tl.current.to(
  //   ref.current.rotation,
  //   {
  //       duration:1, 
  //       y: Math.PI/12, 
  //   },
  //   1
  // );
  // tl.current.to(
  //   pao3.current.rotation,
  //   {
  //       duration:1, 
  //       z: Math.PI/6, 
  //   },
  //   1
  // );

  tl.current.to(
      ref.current.position,
      {
          duration:1, 
          y: -FLOOR_HEIGHT* 3, 
          x: -0.5,
      },
      2
  );
  // tl.current.to(
  //   ref.current.rotation,
  //   {
  //       duration:1, 
  //       y: -Math.PI/12, 
  //   },
  //   2
  // );
  // tl.current.to(
  //   pao4.current.rotation,
  //   {
  //       duration:1, 
  //       z: Math.PI/2, 
  //   },
  //   2
  // );


}, []
);


return (
  <group {...props} 
  dispose={null}
  ref={ref}
  position={[INIT_X_POS, INIT_Y_POS , INIT_Z_POS]}
  rotation= {[0, 0 ,0]}
  >
    
    <Html className="content"  position={[0, 0, 0]} 
      transform style={{fontFamily:'Arial', overflow:'visible',backgroundColor:'#2222ff55', border:'2px black solid', height:'100vh'}}>
      <div className="wrapper" style={{backgroundColor:'#ff2222', height:'50vh',width:'150px'}} >
        <p> Lorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente officiis odit mollitia aut corporis sed debitis dicta. Pariatur totam, similique enim, nam error quasi ullam obcaecati deleniti nesciunt debitis maxime.
        <br />
        </p>
        <video autoPlay muted loop id="myVideo" style={{width:'100px'}}>
            <source src="https://www.softfinanca.net/projectos/ca/campanhas/Campanhas_Producao_Backup_V3/0348_CA-Solucoes-Credito-Habitacao/CA_MD0348_V1_V_CA-Solucoes-Credito-Habitacao.mp4" type="video/mp4" />
        </video>
      </div>
    </Html>
    

    <group
    position={[0,0,0]}
    rotation={[0, 0, 0]}
    ref={pao1}
    >
      
    {/* <mesh geometry={nodes.bread002.geometry} 
      material={materials.bread01a} 
      scale={0.25} > */}
      
      

    <mesh>  
    </mesh>
    </group>
    

    <group
    position={[0, FLOOR_HEIGHT, 1.5]} 
    rotation={[-Math.PI / 3.5, 0, -Math.PI / 2]} 
    ref={pao2}
    > 
    <Html className="content"  position={[0, 0, 0]} transform style={{fontFamily:'Arial', overflow:'visible'}}>
      <div className="wrapper" style={{backgroundColor:'#22ff22', height:'50vh',width:'150px'}} >
        <p> Lorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente officiis odit mollitia aut corporis sed debitis dicta. Pariatur totam, similique enim, nam error quasi ullam obcaecati deleniti nesciunt debitis maxime.
        <br />
        </p>
        <video autoPlay muted loop id="myVideo" style={{width:'100px'}}>
            <source src="https://www.softfinanca.net/projectos/ca/campanhas/Campanhas_Producao_Backup_V3/0348_CA-Solucoes-Credito-Habitacao/CA_MD0348_V1_V_CA-Solucoes-Credito-Habitacao.mp4" type="video/mp4" />
        </video>
      </div>
    </Html>
      <mesh geometry={nodes.bread003.geometry} 
      material={materials.bread02a} 
      scale={0.25} >
        
      </mesh>
    </group>
    

    <group
    position={[0 , 2*FLOOR_HEIGHT, 2]} 
    rotation={[-Math.PI / 3.5, 0, -Math.PI / 2]}
    ref={pao3}
    >
      <mesh geometry={nodes.bread.geometry} 
      material={materials.bread03a} 
      scale={0.25} 
      />
    </group>
    

    <group
    position={[0, 3*FLOOR_HEIGHT, 2]} 
    rotation={[-Math.PI / 3.5, 0, -Math.PI / 2]}
    ref={pao4}
    >
      <mesh geometry={nodes.bread001.geometry} 
      material={materials.bread04a} 
      scale={0.25} 
      />
    </group>
    

    {/* <mesh position={[0, 0, 0]}>
      <boxGeometry />
      <meshMatcapMaterial />
    </mesh>
    <mesh position={[0, FLOOR_HEIGHT, 0]}>
      <boxGeometry />
      <meshMatcapMaterial />
    </mesh>
    <mesh position={[0, 2*FLOOR_HEIGHT, 0]}>
      <boxGeometry />
      <meshMatcapMaterial />
    </mesh>
    <mesh position={[0, 3*FLOOR_HEIGHT, 0]}>
      <boxGeometry />
      <meshMatcapMaterial />
    </mesh> */}

  </group>
  )

}

useGLTF.preload('./src/public/assets/bread_pack.glb')


// useGLTF.preload('./src/assets/italian_coffee_machine_moka.glb')
// useGLTF.preload('./src/assets/WawaOffice.glb')

// Assets CC Attribution:
// "FREE | Bread Pack (CS2)" (https://skfb.ly/oOIUZ) by 6lucius is licensed under Creative Commons Attribution (http://creativecommons.org/licenses/by/4.0/).